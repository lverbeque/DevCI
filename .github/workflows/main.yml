name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline

  lint:
    runs-on: ubuntu-latest
    needs: install
    if: ${{ github.event_name != 'push' || github.ref != 'refs/tags' }} # skip on tag push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Run lint
        run: npm run lint

  only-canary:
    runs-on: ubuntu-latest
    needs: install
    if: ${{ secrets.ENV_TARGET == 'canary' }}
    steps:
      - name: Only Canary
        run: echo "Hello Only Canary!"

  unit-test:
    runs-on: ubuntu-latest
    needs: install
    if: ${{ github.event_name != 'push' || github.ref != 'refs/tags' }} # skip on tag push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Run unit tests
        run: npm test

  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    if: ${{ github.event_name != 'push' || github.ref != 'refs/tags' }} # skip on tag push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Run integration tests
        run: echo "Hello Integration!"

  e2e-test:
    runs-on: ubuntu-latest
    needs: integration-test
    if: ${{ github.event_name != 'push' || github.ref != 'refs/tags' }} # skip on tag push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Run E2E tests
        run: echo "Hello E2E!"

  release:
    runs-on: ubuntu-latest
    needs: e2e-test
    if: ${{ github.ref == 'refs/heads/master' && github.event_name != 'push' && github.ref != 'refs/tags' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Configure Git
        run: |
          git config user.email "${{ secrets.GITLAB_USER_EMAIL }}"
          git config user.name "${{ secrets.GITLAB_USER_NAME }}"
      - name: Set remote URL
        run: git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
      - name: Pull latest changes
        run: git pull origin ${{ github.ref }} --rebase
      - name: Release
        run: npx --yes release-it --ci
